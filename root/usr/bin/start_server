#!/bin/bash

# If running as root, fix volume permissions once, then drop to 'gameserver'.
if [ "$(id -u)" = "0" ] && [ -z "$START_SERVER_PRIVS_DROPPED" ]; then
  set -e

  TARGET_UID=25000
  TARGET_GID=25000
  DIRS=(
    "/home/gameserver/Steam"
    "/home/gameserver/steamcmd"
    "/home/gameserver/server-files"
    "/home/gameserver/cluster-shared"
  )

  for d in "${DIRS[@]}"; do
    mkdir -p "$d"
    # Only run recursive chown once per volume using a marker file to avoid slow startups.
    MARKER="$d/.permissions_set"
    if [ ! -e "$MARKER" ]; then
      echo "Setting ownership for $d to ${TARGET_UID}:${TARGET_GID} (first run)"
      chown -R ${TARGET_UID}:${TARGET_GID} "$d" || true
      # Create marker owned by target user to skip on subsequent starts
      touch "$MARKER"
      chown ${TARGET_UID}:${TARGET_GID} "$MARKER" || true
    else
      # Ensure the root directory has correct ownership even if marker exists
      chown ${TARGET_UID}:${TARGET_GID} "$d" || true
    fi
  done

  # Re-exec this script as the 'gameserver' user
  export START_SERVER_PRIVS_DROPPED=1
  if command -v runuser >/dev/null 2>&1; then
    exec runuser -u gameserver -- /usr/bin/start_server
  else
    exec su -s /bin/bash -c "/usr/bin/start_server" gameserver
  fi
fi

if [ "$ENABLE_DEBUG" = "1" ]; then
  echo "Entering debug mode..."
  sleep 999999999999
  exit 0
fi

# download steamcmd if necessary
if [ ! -d "/home/gameserver/steamcmd/linux32" ]; then
  cd /home/gameserver/steamcmd
	wget https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz
  tar xfvz steamcmd_linux.tar.gz
fi

# download/update server files
cd /home/gameserver/steamcmd
./steamcmd.sh +force_install_dir /home/gameserver/server-files +login anonymous +app_update 2430930 validate +quit

PROTON_VERSION="8-21"
PROTON_DIR_NAME="GE-Proton$PROTON_VERSION"
PROTON_ARCHIVE_NAME="$PROTON_DIR_NAME.tar.gz"
STEAM_COMPAT_DATA=/home/gameserver/server-files/steamapps/compatdata
STEAM_COMPAT_DIR=/home/gameserver/Steam/compatibilitytools.d
ASA_COMPAT_DATA=$STEAM_COMPAT_DATA/2430930
ASA_BINARY_DIR="/home/gameserver/server-files/ShooterGame/Binaries/Win64"
START_PARAMS_FILE="/home/gameserver/server-files/start-parameters"
MODS="$(/usr/bin/cli-asa-mods)"
ASA_START_PARAMS="$ASA_START_PARAMS $MODS"
ASA_BINARY_NAME="ArkAscendedServer.exe"
ASA_PLUGIN_BINARY_NAME="AsaApiLoader.exe"
ASA_PLUGIN_LOADER_ARCHIVE_NAME=$(basename $ASA_BINARY_DIR/AsaApi_*.zip)
ASA_PLUGIN_LOADER_ARCHIVE_PATH="$ASA_BINARY_DIR/$ASA_PLUGIN_LOADER_ARCHIVE_NAME"
ASA_PLUGIN_BINARY_PATH="$ASA_BINARY_DIR/$ASA_PLUGIN_BINARY_NAME"
LAUNCH_BINARY_NAME="$ASA_BINARY_NAME"

# install proton if necessary
if [ ! -d "$STEAM_COMPAT_DIR/$PROTON_DIR_NAME" ]; then
  mkdir -p $STEAM_COMPAT_DIR
  echo "Downloading Proton version $PROTON_VERSION... This might take a while"
  wget -P /tmp https://github.com/GloriousEggroll/proton-ge-custom/releases/download/GE-Proton$PROTON_VERSION/GE-Proton$PROTON_VERSION.tar.gz
  EXIT_CODE=$?

  if [ $EXIT_CODE -ne 0 ]; then
    echo "Error: Error while downloading Proton ($EXIT_CODE)"
    exit 200
  fi

  echo "Download finished, comparing checksums..."
  sha512sum -c /usr/share/proton/GE-Proton$PROTON_VERSION.sha512sum

  if [ $? -ne 0 ]; then
    echo "Error: Proton checksum mismatch!"
    exit 201
  fi

  tar -xf /tmp/$PROTON_ARCHIVE_NAME -C $STEAM_COMPAT_DIR
  rm /tmp/$PROTON_ARCHIVE_NAME
fi

# install proton compat game data
if [ ! -d "$ASA_COMPAT_DATA" ]; then
  mkdir -p $STEAM_COMPAT_DATA
  cp -r $STEAM_COMPAT_DIR/$PROTON_DIR_NAME/files/share/default_pfx $ASA_COMPAT_DATA
fi

echo "Starting the ARK: Survival Ascended dedicated server..."
echo "Start parameters: $ASA_START_PARAMS"

export XDG_RUNTIME_DIR=/run/user/$(id -u)
export STEAM_COMPAT_CLIENT_INSTALL_PATH=/home/gameserver/Steam
export STEAM_COMPAT_DATA_PATH=$ASA_COMPAT_DATA

cd "$ASA_BINARY_DIR"

# unzip the asa plugin api archive if it exists. delete it afterwards
if [ -f "$ASA_PLUGIN_LOADER_ARCHIVE_PATH" ]; then
  unzip -o $ASA_PLUGIN_LOADER_ARCHIVE_NAME
  rm $ASA_PLUGIN_LOADER_ARCHIVE_NAME
fi

if [ -f "$ASA_PLUGIN_BINARY_PATH" ]; then
  echo "Detected ASA Server API loader. Launching server through $ASA_PLUGIN_BINARY_NAME"
  LAUNCH_BINARY_NAME="$ASA_PLUGIN_BINARY_NAME"
fi

$STEAM_COMPAT_DIR/$PROTON_DIR_NAME/proton run $LAUNCH_BINARY_NAME $ASA_START_PARAMS
