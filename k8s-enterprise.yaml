apiVersion: v1
kind: Namespace
metadata:
  name: asa-enterprise
  labels:
    name: asa-enterprise
    environment: production

---
# ConfigMap for Enterprise Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: asa-enterprise-config
  namespace: asa-enterprise
data:
  enterprise.json: |
    {
      "server_name": "ASA Enterprise Kubernetes",
      "max_players": 100,
      "admin_password": "",
      "enable_rcon_rate_limiting": true,
      "max_rcon_requests_per_minute": 60,
      "allowed_rcon_ips": ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"],
      "enable_audit_logging": true,
      "health_check_enabled": true,
      "health_check_interval": 60,
      "metrics_collection_enabled": true,
      "alert_on_high_memory": true,
      "memory_threshold_mb": 12288,
      "auto_backup_enabled": true,
      "backup_interval_hours": 6,
      "backup_retention_days": 30,
      "api_enabled": true,
      "api_port": 8080,
      "api_auth_token": ""
    }

---
# Secret for sensitive configuration
apiVersion: v1
kind: Secret
metadata:
  name: asa-enterprise-secrets
  namespace: asa-enterprise
type: Opaque
stringData:
  admin-password: "your-admin-password-here"
  api-auth-token: "your-api-token-here"
  rcon-password: "your-rcon-password-here"

---
# Persistent Volume Claims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: asa-steam-data
  namespace: asa-enterprise
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: asa-server-files
  namespace: asa-enterprise
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: asa-enterprise-data
  namespace: asa-enterprise
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: asa-enterprise-server
  namespace: asa-enterprise
  labels:
    app: asa-enterprise-server
    version: v1
spec:
  replicas: 1
  strategy:
    type: Recreate  # Cannot have multiple ARK servers with same save
  selector:
    matchLabels:
      app: asa-enterprise-server
  template:
    metadata:
      labels:
        app: asa-enterprise-server
        version: v1
    spec:
      securityContext:
        runAsUser: 25000
        runAsGroup: 25000
        fsGroup: 25000
      
      initContainers:
      - name: init-permissions
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          chown -R 25000:25000 /home/gameserver/Steam
          chown -R 25000:25000 /home/gameserver/server-files
          chown -R 25000:25000 /home/gameserver/enterprise-config
          chmod -R 755 /home/gameserver/Steam
          chmod -R 755 /home/gameserver/server-files
          chmod -R 755 /home/gameserver/enterprise-config
        volumeMounts:
        - name: steam-data
          mountPath: /home/gameserver/Steam
        - name: server-files
          mountPath: /home/gameserver/server-files
        - name: enterprise-data
          mountPath: /home/gameserver/enterprise-config
        securityContext:
          runAsUser: 0
      
      containers:
      - name: asa-server
        image: ghcr.io/justamply/asa-linux-server:latest
        imagePullPolicy: Always
        
        env:
        - name: ASA_START_PARAMS
          value: "TheIsland_WP?listen?Port=7777?RCONPort=27020?RCONEnabled=True -WinLiveMaxPlayers=100 -clusterid=k8s-enterprise"
        - name: ASA_LOG_LEVEL
          value: "INFO"
        - name: ASA_CONFIG_DIR
          value: "/home/gameserver/enterprise-config"
        - name: ASA_AUDIT_LOG_PATH
          value: "/home/gameserver/enterprise-config/audit.log"
        - name: ASA_METRICS_PATH
          value: "/home/gameserver/enterprise-config/metrics"
        - name: ASA_BACKUP_DIR
          value: "/home/gameserver/enterprise-config/backups"
        - name: ENABLE_DEBUG
          value: "0"
        - name: SERVER_RESTART_CRON
          value: "0 4 * * *"
        
        ports:
        - name: game-udp
          containerPort: 7777
          protocol: UDP
        - name: rcon-tcp
          containerPort: 27020
          protocol: TCP
        - name: api-http
          containerPort: 8080
          protocol: TCP
        
        volumeMounts:
        - name: steam-data
          mountPath: /home/gameserver/Steam
        - name: server-files
          mountPath: /home/gameserver/server-files
        - name: enterprise-data
          mountPath: /home/gameserver/enterprise-config
        - name: config-volume
          mountPath: /home/gameserver/enterprise-config/enterprise.json
          subPath: enterprise.json
        
        resources:
          requests:
            cpu: 2000m
            memory: 8Gi
          limits:
            cpu: 6000m
            memory: 14Gi
        
        # Health and readiness probes
        startupProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "asa-ctrl enterprise health"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 15
          failureThreshold: 10
        
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "asa-ctrl enterprise health"
          periodSeconds: 60
          timeoutSeconds: 15
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /api/v1/status
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      
      volumes:
      - name: steam-data
        persistentVolumeClaim:
          claimName: asa-steam-data
      - name: server-files
        persistentVolumeClaim:
          claimName: asa-server-files
      - name: enterprise-data
        persistentVolumeClaim:
          claimName: asa-enterprise-data
      - name: config-volume
        configMap:
          name: asa-enterprise-config
      
      # Node selection for high-performance nodes
      nodeSelector:
        node-type: high-performance
      
      # Pod disruption budget
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "gaming"
        effect: "NoSchedule"

---
# Service for ARK Game Traffic
apiVersion: v1
kind: Service
metadata:
  name: asa-game-service
  namespace: asa-enterprise
  labels:
    app: asa-enterprise-server
spec:
  type: LoadBalancer
  ports:
  - name: game-udp
    port: 7777
    targetPort: 7777
    protocol: UDP
  - name: rcon-tcp
    port: 27020
    targetPort: 27020
    protocol: TCP
  selector:
    app: asa-enterprise-server
  # Use a specific external IP if available
  # loadBalancerIP: "xxx.xxx.xxx.xxx"

---
# Service for Enterprise API
apiVersion: v1
kind: Service
metadata:
  name: asa-api-service
  namespace: asa-enterprise
  labels:
    app: asa-enterprise-server
    component: api
spec:
  type: ClusterIP
  ports:
  - name: api-http
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: asa-enterprise-server

---
# Ingress for Enterprise API (NGINX Ingress Controller)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: asa-api-ingress
  namespace: asa-enterprise
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit-requests-per-second: "10"
    nginx.ingress.kubernetes.io/rate-limit-burst-multiplier: "2"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - asa-api.yourdomain.com
    secretName: asa-api-tls
  rules:
  - host: asa-api.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: asa-api-service
            port:
              number: 8080

---
# Horizontal Pod Autoscaler (if running multiple instances)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: asa-enterprise-hpa
  namespace: asa-enterprise
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: asa-enterprise-server
  minReplicas: 1
  maxReplicas: 1  # ARK servers can't typically scale horizontally
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85

---
# ServiceMonitor for Prometheus (if using Prometheus Operator)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: asa-enterprise-monitor
  namespace: asa-enterprise
  labels:
    app: asa-enterprise-server
spec:
  selector:
    matchLabels:
      app: asa-enterprise-server
      component: api
  endpoints:
  - port: api-http
    path: /api/v1/metrics
    interval: 30s
    scrapeTimeout: 10s

---
# NetworkPolicy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: asa-enterprise-netpol
  namespace: asa-enterprise
spec:
  podSelector:
    matchLabels:
      app: asa-enterprise-server
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
  - from: []  # Allow from any source
    ports:
    - protocol: UDP
      port: 7777
    - protocol: TCP
      port: 27020
  egress:
  - {}  # Allow all egress traffic

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: asa-enterprise-pdb
  namespace: asa-enterprise
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: asa-enterprise-server